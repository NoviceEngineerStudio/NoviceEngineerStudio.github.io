---
import { Language } from "../../../../config/language";
import NavLayout from "../../../../layouts/NavLayout.astro";

const language: Language = Language.ENGLISH;
---

<NavLayout title="MyArcade">
    <my-arcade-cabinet-controller data-language={language}>
        <!-- * Render Parent * -->
        <div id="my-arcade-render-parent" />

        <!-- * UI Parent * -->
        <div id="my-arcade-ui-parent">
            <div class="my-arcade-configuration-panel">
                <!-- * Model Type * -->
                <div>
                    <span>Model Type</span>
                    <hr />
                </div>

                <!-- * Base and Trim Color * -->
                <div>
                    <span>Cabinet Colors</span>
                    <hr />
                </div>

                <!-- * Left, Right, and Front Decals * -->
                <div>
                    <span>Panel Decals</span>
                    <hr />
                </div>

                <!-- * Marquee Sign * -->
                <div>
                    <span>Marquee Sign</span>
                    <hr />
                </div>

                <!-- * Player Count and Control Layouts * -->
                <div>
                    <span>Players</span>
                    <hr />
                    <div>
                        <label class="text-xs">Player Count</label>
                        <input type="number" />
                    </div>
                </div>
            </div>

            <div class="my-arcade-cost-panel">
                <div>
                    <div id="my-arcade-cost">$0.00</div>
                    <small class="text-xs">Cost Per-Unit</small>
                </div>

                <button class="indigo-button" onclick="alert('At this point, the data would be forwarded to the checkout page. But this is just a ThreeJS example.');">
                    Checkout
                </button>
            </div>
        </div>
    </my-arcade-cabinet-controller>
</NavLayout>

<style>
    my-arcade-cabinet-controller {
        position: fixed;
        top: 0;
        left: 0;

        width: 100vw;
        height: 100vh;

        display: flex;
        flex-direction: column;
    }

    #my-arcade-render-parent {
        width: 100%;
        height: calc(100% - 24rem);
    }

    #my-arcade-ui-parent {
        width: 100%;
        height: 24rem;

        overflow-y: auto;
        padding-top: 1rem;

        display: flex;
        flex-direction: column;

        background-color: #171717;
    }

    .my-arcade-configuration-panel {
        display: flex;
        flex-direction: column;
        gap: 4rem;
        flex: 1;

        overflow-y: auto;
        padding-left: 2rem;
        padding-right: 2rem;
    }

    .my-arcade-cost-panel {
        display: flex;
        justify-content: space-between;

        padding: 2rem;

        background-color: #404040;
    }

    @media only screen and (min-width: 64rem) {
        my-arcade-cabinet-controller {
            flex-direction: row;
        }

        #my-arcade-render-parent {
            width: calc(100% - 24rem);
            height: 100%;
        }

        #my-arcade-ui-parent {
            width: 24rem;
            height: 100%;

            padding-top: 6rem;
        }
    }
</style>

<script src="../../../../components/my_arcade/CabinetController.ts" />